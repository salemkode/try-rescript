// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Libauth = require("@bitauth/libauth");

var isString = (function(x) { return typeof decoded === "string" });

var raiseError = (function(x) { return typeof decoded === "string" });

function fromXPub(xpub, path) {
  return Libauth.instantiateBIP32Crypto().then(function (instantiateBIP32) {
              var decoded = Libauth.decodeHdPublicKey(instantiateBIP32, xpub);
              if (isString(decoded)) {
                raiseError(decoded);
              }
              var deriveHD = Libauth.deriveHdPath(instantiateBIP32, decoded.node, "M/" + path);
              if (isString(deriveHD)) {
                raiseError(deriveHD);
              }
              return Promise.resolve(Libauth.encodeCashAddress(decoded.network === "testnet" ? "bchtest" : "bitcoincash", 0, Libauth.deriveHdPublicNodeIdentifier(instantiateBIP32, deriveHD)));
            });
}

exports.isString = isString;
exports.raiseError = raiseError;
exports.fromXPub = fromXPub;
/* @bitauth/libauth Not a pure module */
